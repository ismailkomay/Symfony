<?php

namespace Proxies\__CG__\Fdr\AdminBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Vehicule extends \Fdr\AdminBundle\Entity\Vehicule implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'feuilleDeRoutes', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'id', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'tonnage', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'type', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'remorque', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'actif', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'vidange', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'compteur', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'matricule', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'fonctionnel', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'champssupp1', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'champssupp2');
        }

        return array('__isInitialized__', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'feuilleDeRoutes', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'id', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'tonnage', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'type', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'remorque', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'actif', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'vidange', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'compteur', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'matricule', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'fonctionnel', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'champssupp1', '' . "\0" . 'Fdr\\AdminBundle\\Entity\\Vehicule' . "\0" . 'champssupp2');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Vehicule $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTonnage($tonnage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTonnage', array($tonnage));

        return parent::setTonnage($tonnage);
    }

    /**
     * {@inheritDoc}
     */
    public function getTonnage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTonnage', array());

        return parent::getTonnage();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemorque($remorque)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemorque', array($remorque));

        return parent::setRemorque($remorque);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemorque()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemorque', array());

        return parent::getRemorque();
    }

    /**
     * {@inheritDoc}
     */
    public function setActif($actif)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActif', array($actif));

        return parent::setActif($actif);
    }

    /**
     * {@inheritDoc}
     */
    public function getActif()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActif', array());

        return parent::getActif();
    }

    /**
     * {@inheritDoc}
     */
    public function setVidange($vidange)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVidange', array($vidange));

        return parent::setVidange($vidange);
    }

    /**
     * {@inheritDoc}
     */
    public function getVidange()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVidange', array());

        return parent::getVidange();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompteur($compteur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompteur', array($compteur));

        return parent::setCompteur($compteur);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompteur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompteur', array());

        return parent::getCompteur();
    }

    /**
     * {@inheritDoc}
     */
    public function setMatricule($matricule)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMatricule', array($matricule));

        return parent::setMatricule($matricule);
    }

    /**
     * {@inheritDoc}
     */
    public function getMatricule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMatricule', array());

        return parent::getMatricule();
    }

    /**
     * {@inheritDoc}
     */
    public function setChampssupp1($champssupp1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChampssupp1', array($champssupp1));

        return parent::setChampssupp1($champssupp1);
    }

    /**
     * {@inheritDoc}
     */
    public function getChampssupp1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChampssupp1', array());

        return parent::getChampssupp1();
    }

    /**
     * {@inheritDoc}
     */
    public function setChampssupp2($champssupp2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChampssupp2', array($champssupp2));

        return parent::setChampssupp2($champssupp2);
    }

    /**
     * {@inheritDoc}
     */
    public function getChampssupp2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChampssupp2', array());

        return parent::getChampssupp2();
    }

    /**
     * {@inheritDoc}
     */
    public function addFeuilleDeRoute(\Fdr\AdminBundle\Entity\FeuilleDeRoute $feuilleDeRoutes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFeuilleDeRoute', array($feuilleDeRoutes));

        return parent::addFeuilleDeRoute($feuilleDeRoutes);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFeuilleDeRoute(\Fdr\AdminBundle\Entity\FeuilleDeRoute $feuilleDeRoutes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFeuilleDeRoute', array($feuilleDeRoutes));

        return parent::removeFeuilleDeRoute($feuilleDeRoutes);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeuilleDeRoutes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeuilleDeRoutes', array());

        return parent::getFeuilleDeRoutes();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setFonctioonnel($fonctionnel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFonctioonnel', array($fonctionnel));

        return parent::setFonctioonnel($fonctionnel);
    }

    /**
     * {@inheritDoc}
     */
    public function getFonctionnel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFonctionnel', array());

        return parent::getFonctionnel();
    }

    /**
     * {@inheritDoc}
     */
    public function setFonctionnel($fonctionnel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFonctionnel', array($fonctionnel));

        return parent::setFonctionnel($fonctionnel);
    }

}
